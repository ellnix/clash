{%- if vars | length == 1 -%} 

{%- set var = vars[0] -%}
let mut inputs = String::new();
io::stdin().read_line(&mut inputs).unwrap();
for {{ index_ident }} in inputs.split_whitespace() {
    let {{ var.ident }} = parse_input!({{ index_ident }}, {{ type_tokens[var.var_type] }});
}

{%- else -%}
{%- set vars_length = vars | length -%}

let mut input_line = String::new();
io::stdin().read_line(&mut input_line).unwrap();
let inputs = input_line.split_whitespace().collect::<Vec<_>>();
for {{ index_ident }} in 0..{{ count_var }} as usize {
{%- for var in vars %}
    {%- if loop.index0 == 0 -%}
        {%- set idx = "" -%}
    {%- else -%}
        {%- set idx = "+" ~ loop.index0 -%}
    {%- endif -%}
    {%- set fn = "inputs[" ~ vars_length ~ "*" ~ index_ident ~ idx ~ "]" %}
    let {{ var.ident }} = parse_input!({{ fn }}, {{ type_tokens[var.var_type] }});
{%- endfor %}
}
{%- endif %}
